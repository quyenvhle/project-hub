{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","class","Component","compose","console","log","firestore","ordered","notifcations","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.5d29e532.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Projects</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERR', err });\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(() => {\n            dispatch({ type: 'SIGNUP_ERROR' })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux';\n\nconst NavBar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\n                { links }\n            </div>\n        </nav>  \n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n} \n\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user}</span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-data\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/project/'+ project.id}>\n                        <ProjectSummary project={project} key={project.id} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, {Component} from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render(){\n        const { projects, auth, notifications } = this.props;\n\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return(\n            <div className=\"dashboard container\">\n                <div class=\"row\">\n                    <div class=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div class=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifcations\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', createdAt: ['time','desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time','desc'] }\n    ])\n)(Dashboard)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    if (project) {\n        return(\n        <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">{ project.title }</span>\n                <p>{ project.content }</p>\n            </div>\n            <div className=\"card-action gret lighten-4 grey-text\">\n                <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n        </div>\n        </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nexport class SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n\n        if (auth.uid) return <Redirect to='/' />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red text-center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nexport class SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nexport class CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project});\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        })\n    }\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavBar from './components/layout/NavBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERR':\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            return state;\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: 'Help me find peach', content: 'blah blah blah'},\n        {id: '2', title: 'Collect all the stars', content: 'blah blah blah'},\n        {id: '3', title: 'Egg hunt with Yoshi', content: 'blah blah blah'}\n    ]\n}\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar config = {\n    apiKey: \"AIzaSyBrYpQJrwrnVWuKzvwRbMdyUh2ePKBApZY\",\n    authDomain: \"project-tracker-95777.firebaseapp.com\",\n    databaseURL: \"https://project-tracker-95777.firebaseio.com\",\n    projectId: \"project-tracker-95777\",\n    storageBucket: \"project-tracker-95777.appspot.com\",\n    messagingSenderId: \"127152537761\",\n    appId: \"1:127152537761:web:f7957f6045bf1f5e77b0e0\",\n    measurementId: \"G-X06XGVRVN4\"\n  };\n// Initialize Firebase\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"center\"> <p>Loading Mario Plan...</p></div>;\n      return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}